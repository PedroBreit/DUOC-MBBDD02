-- PRY2204 - Semana 8

/*
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS PURGE;
DROP TABLE VENTA CASCADE CONSTRAINTS PURGE;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS PURGE;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS PURGE;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS PURGE;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS PURGE;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS PURGE;
DROP TABLE MARCA CASCADE CONSTRAINTS PURGE;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS PURGE;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS PURGE;
DROP TABLE SALUD CASCADE CONSTRAINTS PURGE;
DROP TABLE AFP CASCADE CONSTRAINTS PURGE;
DROP TABLE COMUNA CASCADE CONSTRAINTS PURGE;
DROP TABLE REGION CASCADE CONSTRAINTS PURGE;
DROP SEQUENCE SEQ_SALUD;
DROP SEQUENCE SEQ_EMPLEADO;
*/

--Caso 1: Implementación del modelo

--Región
CREATE TABLE REGION (
id_region NUMBER(4) NOT NULL,
nom_region VARCHAR2(255) not null,

CONSTRAINT PK_REGION PRIMARY KEY (id_region)
);

--Comúna
CREATE TABLE COMUNA (
id_comuna NUMBER(4) NOT NULL,
nom_comuna VARCHAR2(100) NOT NULL,
id_region NUMBER(4) NOT NULL,

CONSTRAINT PK_COMUNA PRIMARY KEY (id_comuna),
CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (id_region) REFERENCES REGION(id_region)
);

--Medio de pago
CREATE TABLE MEDIO_PAGO(
id_mpago NUMBER(3) NOT NULL,
nombre_mpago VARCHAR2(40) NOT NULL,

CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY(id_mpago)
);

--AFP
CREATE TABLE AFP(
id_afp NUMBER(5) GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6) NOT NULL,
nom_afp VARCHAR2(255) not null,

CONSTRAINT PK_AFP PRIMARY KEY(id_afp)
);

--Salud
CREATE TABLE SALUD(
id_salud NUMBER(4) NOT NULL,
nom_salud VARCHAR2(40) NOT NULL,

CONSTRAINT PK_SALUD PRIMARY KEY(id_salud)
);

--Categoria
CREATE TABLE CATEGORIA(
id_categoria NUMBER(3) NOT NULL,
nombre_categoria VARCHAR2(255) NOT NULL,

CONSTRAINT PK_CATEGORIA PRIMARY KEY (id_categoria)
);

--Marca
CREATE TABLE MARCA(
id_marca NUMBER(3) NOT NULL,
nombre_marca VARCHAR2(25) NOT NULL,

CONSTRAINT PK_MARCA PRIMARY KEY (id_marca)
);

--Proveedor
CREATE TABLE PROVEEDOR (
id_proveedor NUMBER(5) NOT NULL,
nombre_proveedor VARCHAR2(150) NOT NULL,
rut_proveedor VARCHAR2(10) NOT NULL,
telefono VARCHAR2(10) NOT NULL,
email VARCHAR2(200) NOT NULL,
direccion VARCHAR(200) NOT NULL,
id_comuna NUMBER(4) NOT NULL,

CONSTRAINT PK_PROVEEDOR PRIMARY KEY (id_proveedor),
CONSTRAINT FK_PROVEEDOR_COMUNA FOREIGN KEY (id_comuna) REFERENCES COMUNA(id_comuna)
);

--Empleado
CREATE TABLE EMPLEADO(
id_empleado NUMBER(4) NOT NULL,
rut_empleado VARCHAR2(10) NOT NULL,
nombre_empleado VARCHAR2(25) NOT NULL,
apellido_paterno VARCHAR2(25) NOT NULL,
apellido_materno VARCHAR2(25) NOT NULL, 
fecha_contratacion DATE NOT NULL,
sueldo_base NUMBER(10) NOT NULL,
bono_jefatura NUMBER(10),
activo CHAR(1) NOT NULL,
tipo_empleado VARCHAR2(25),
cod_empleado NUMBER(4),
id_salud NUMBER(4) NOT NULL, 
id_afp NUMBER(5) NOT NULL,

CONSTRAINT PK_EMPLEADO PRIMARY KEY(id_empleado),
CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY(id_salud) REFERENCES SALUD(id_salud),
CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY(id_afp) REFERENCES AFP(id_afp),
CONSTRAINT FK_EMPLEADO_EMPLEADO FOREIGN KEY(cod_empleado) REFERENCES EMPLEADO(id_empleado),
CONSTRAINT CK_EMPLEADO_TIPO CHECK(tipo_empleado IN('Vendedor','Administrativo'))
);

--Vendedor
CREATE TABLE VENDEDOR(
id_empleado NUMBER(4) NOT NULL,
comision_venta NUMBER(5,2) NOT NULL,

CONSTRAINT PK_VENDEDOR PRIMARY KEY(id_empleado),
CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY(id_empleado) REFERENCES EMPLEADO(id_empleado)
);

--Administrativo
CREATE TABLE ADMINISTRATIVO(
id_empleado NUMBER(4) NOT NULL,

CONSTRAINT PK_ADMINISTRATIVO PRIMARY KEY(id_empleado),
CONSTRAINT FK_ADMINISTRATIVO_EMPLEADO FOREIGN KEY(id_empleado) REFERENCES EMPLEADO(id_empleado)
);

--Venta
CREATE TABLE VENTA(
id_venta NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3) NOT NULL,
fecha_venta DATE NOT NULL,
total_venta NUMBER(10) NOT NULL,
id_mpago NUMBER(3) NOT NULL,
id_empleado NUMBER(4) NOT NULL,

CONSTRAINT PK_VENTA PRIMARY KEY(id_venta),
CONSTRAINT FK_VENTA_MEDIO_PAGO FOREIGN KEY(id_mpago) REFERENCES MEDIO_PAGO(id_mpago),
CONSTRAINT FK_VENTA_EMPLKEADO FOREIGN KEY(id_empleado) REFERENCES EMPLEADO(id_empleado)
);

--Producto
CREATE TABLE PRODUCTO(
id_producto NUMBER(4) NOT NULL,
nombre_producto VARCHAR2(100) NOT NULL,
precio_unitario NUMBER NOT NULL,
origen_nacional CHAR(1) NOT NULL,
stock_minimo NUMBER(3) NOT NULL,
activo CHAR(1) NOT NULL,
id_marca NUMBER(3) NOT NULL,
id_categoria NUMBER(3) NOT NULL,
id_proveedor NUMBER(5) NOT NULL,

CONSTRAINT PK_PRODUCTO PRIMARY KEY (id_producto),
CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (id_marca) REFERENCES MARCA(id_marca),
CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (id_categoria) REFERENCES CATEGORIA(id_categoria),
CONSTRAINT FK_PRODUCTO_PROVEEDOR FOREIGN KEY (id_proveedor) REFERENCES PROVEEDOR(id_proveedor)
);

--Detalle de venta
CREATE TABLE DETALLE_VENTA(
id_venta NUMBER(4) NOT NULL,
id_producto NUMBER(4) NOT NULL,
cantidad NUMBER(6) NOT NULL,

CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY(id_venta, id_producto),
CONSTRAINT FK_DETALLE_VENTA_VENTA FOREIGN KEY(id_venta) REFERENCES VENTA(id_venta),
CONSTRAINT FK_DETALLE_VENTA_PRODUCTO FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto)
);


--Caso 2: Implementacion del modelo

--Sueldo minimo $400.000
ALTER TABLE EMPLEADO
    ADD CONSTRAINT CK_EMPLEADO_SUELDO_MIN
    CHECK (sueldo_base >= 400000);

--Comisión vendedor entre 0% y 25%
ALTER TABLE VENDEDOR
    ADD CONSTRAINT  CK_VENDEDOR_COMISION
    CHECK (comision_venta >= 0 AND comision_venta <= 0.25);
    
--Stock minimo 3
ALTER TABLE PRODUCTO
    ADD CONSTRAINT CK_PRODUCTO_STOCK
    CHECK (stock_minimo >= 3);
    
--Email proveedor unico
ALTER TABLE PROVEEDOR
    ADD CONSTRAINT UN_PROVEEDOR_EMAIL UNIQUE (email);
    
--Marca unica
ALTER TABLE MARCA
    ADD CONSTRAINT UN_MARCA_NOMBRE UNIQUE (nombre_marca);

-- cantidad de productos >= 1
ALTER TABLE DETALLE_VENTA
    ADD CONSTRAINT CK_DETALLE_VENTA_CANTIDAD
    CHECK (cantidad >= 1);
    

--Caso 3: Poblamiento del modelo

--Sequencia Salud
CREATE SEQUENCE SEQ_SALUD
    START WITH 2050 INCREMENT BY 10 NOCACHE NOCYCLE;
    
--Sequencia Empleado
CREATE SEQUENCE SEQ_EMPLEADO
    START WITH 750 INCREMENT BY 3 NOCACHE NOCYCLE;
    
--Región
INSERT INTO REGION (id_region, nom_region) VALUES (1, 'Región Metropolitana');
INSERT INTO REGION (id_region, nom_region) VALUES (2, 'Valparaiso');
INSERT INTO REGION (id_region, nom_region) VALUES (3, 'Biobio');
INSERT INTO REGION (id_region, nom_region) VALUES (4, 'Los Lagos');

--AFP
INSERT INTO AFP (nom_afp) VALUES ('Habitat');
INSERT INTO AFP (nom_afp) VALUES ('Cuprum');
INSERT INTO AFP (nom_afp) VALUES ('Provida');
INSERT INTO AFP (nom_afp) VALUES ('PlanVital');

--Salud
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Fonasa');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Colmena');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Banmédica');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL,'Isapre Cruz Blanca');

--Medio de pago
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (12, 'Tarjeta Debito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (13, 'Tarjeta Credito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_mpago) VALUES (14, 'Cheque');

--Empleado
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '11111111-1', 'Marcela', 'González', 'Pérez', TO_DATE('15-03-2022','DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo', NULL, 2050, 210);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '22222222-2', 'José', 'Muñoz', 'Ramírez', TO_DATE('10-07-2021','DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo', NULL, 2060, 216);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '33333333-3', 'Verónica', 'Soto', 'Alarcón', TO_DATE('05-01-2020','DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor', 750, 2060, 228);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '44444444-4', 'Luis', 'Reyes', 'Fuentes', TO_DATE('01-04-2023','DD-MM-YYYY'), 560000, NULL, 'S', 'Vendedor', 750, 2070, 228);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '55555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023','DD-MM-YYYY'), 600000, NULL, 'S', 'Vendedor', 753, 2070, 216);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '66666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023','DD-MM-YYYY'), 610000, NULL, 'S', 'Administrativo', 753, 2060, 210);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '77777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023','DD-MM-YYYY'), 650000, NULL, 'S', 'Administrativo', 750, 2050, 210);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '88888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023','DD-MM-YYYY'), 620000, NULL, 'S', 'Vendedor', 750, 2060, 216);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '99999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023','DD-MM-YYYY'), 570000, NULL, 'S', 'Vendedor', 753, 2070, 228);
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, id_salud, id_afp)
    VALUES (SEQ_EMPLEADO.NEXTVAL, '10101010-0', 'Tomás', 'Vidal', 'Espinoza', TO_DATE('01-06-2023','DD-MM-YYYY'), 530000, NULL, 'S', 'Vendedor', NULL, 2050, 222);

--Venta
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado) VALUES (TO_DATE('12-05-2023', 'DD-MM-YYYY'), 225990, 12, 771);
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado) VALUES (TO_DATE('23-10-2023', 'DD-MM-YYYY'), 524990, 13, 777);
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado) VALUES (TO_DATE('17-02-2023', 'DD-MM-YYYY'), 466990, 11, 759);


--Caso 4: Recuperación de datos

--Informe 1
SELECT 
    id_empleado AS "IDENTIFICADOR",
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "NOMBRE COMPLETO",
    sueldo_base AS "SUELDO",
    bono_jefatura AS "BONIFICACION",
    sueldo_base + bono_jefatura AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE activo = 'S' AND bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, apellido_paterno DESC;

--Informe 2
SELECT
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "EMPLEADO",
    sueldo_base AS "SUELDO",
    (sueldo_base * 0.08) AS "POSIBLE AUMENTO",
    (sueldo_base * 1.08) AS "SUELDO SIMULADO"
FROM EMPLEADO
WHERE sueldo_base BETWEEN 550000 AND 800000
ORDER BY sueldo_base;