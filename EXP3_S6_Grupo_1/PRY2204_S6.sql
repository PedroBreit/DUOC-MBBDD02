/* 
   PRY2204 - Exp3 - Semana 6
   Caso 1
*/

/* ===================== TABLAS MAESTRAS ===================== */
/* Región/ciudad/comuna para registrar dirección completa del paciente.*/

/* REGION */
CREATE TABLE region (
    id_region NUMBER PRIMARY KEY,
    nombre VARCHAR2(80) NOT NULL
);

/* CIUDAD */
CREATE TABLE ciudad (
    id_ciudad NUMBER PRIMARY KEY,
    nombre VARCHAR2(80) NOT NULL,
    id_region NUMBER NOT NULL,
  
    CONSTRAINT fk_ciudad_region
        FOREIGN KEY (id_region) REFERENCES region(id_region)
);

/* COMUNA  (IDENTITY: comienza en 1101 e incrementa de 1) */
CREATE TABLE comuna (
    id_comuna NUMBER GENERATED BY DEFAULT AS IDENTITY 
        (START WITH 1101 INCREMENT BY 1) PRIMARY KEY,
    nombre VARCHAR2(80) NOT NULL,
    id_ciudad NUMBER NOT NULL,
  
    CONSTRAINT fk_comuna_ciudad
        FOREIGN KEY (id_ciudad) REFERENCES ciudad(id_ciudad)
);

/* ESPECIALIDAD (IDENTITY autoincremental) */
CREATE TABLE especialidad (
  id_especialidad NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  nombre VARCHAR2(80) NOT NULL
);

/* ===================== PERSONAS DEL SISTEMA ===================== */
/* Reglas de DV: solo 0-9 o 'K' (mayúscula). Teléfono de MÉDICO debe ser ÚNICO. */

/* MEDICO */
CREATE TABLE medico (
    rut VARCHAR2(12)  PRIMARY KEY,
    dv CHAR(1) NOT NULL
        CHECK (REGEXP_LIKE(dv, '^[0-9K]$')),
    nombre VARCHAR2(120) NOT NULL,
    telefono VARCHAR2(20) NOT NULL,
    id_especialidad NUMBER NOT NULL,
    id_comuna NUMBER NOT NULL,
    
    CONSTRAINT uk_medico_telefono UNIQUE (telefono),
    CONSTRAINT fk_medico_especialidad
        FOREIGN KEY (id_especialidad) REFERENCES especialidad(id_especialidad),
    CONSTRAINT fk_medico_comuna
        FOREIGN KEY (id_comuna) REFERENCES comuna(id_comuna)
);

/* DIGITADOR (quien ingresa recetas) */
CREATE TABLE digitador (
    rut VARCHAR2(12) PRIMARY KEY,
    dv CHAR(1) NOT NULL
        CHECK (REGEXP_LIKE(dv, '^[0-9K]$')),
    nombre VARCHAR2(120) NOT NULL
);

/* PACIENTE (guarda dirección completa vía FK a COMUNA -> CIUDAD -> REGION) */
CREATE TABLE paciente (
    rut VARCHAR2(12) PRIMARY KEY,
    dv CHAR(1) NOT NULL
        CHECK (REGEXP_LIKE(dv, '^[0-9K]$')),
    nombre VARCHAR2(120) NOT NULL,
    direccion VARCHAR2(200),
    id_comuna NUMBER NOT NULL,
    
        CONSTRAINT fk_paciente_comuna
        FOREIGN KEY (id_comuna) REFERENCES comuna(id_comuna)
);

/* ===================== MEDICAMENTOS ===================== */
/* Medicamentos: identificador único, nombre, dosis recomendada, stock y tipo (genérico/marca). */
CREATE TABLE medicamento (
    id_medicamento NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(120) NOT NULL,
    dosis_recomendada VARCHAR2(80) NOT NULL,
    stock_disponible NUMBER DEFAULT 0
        CHECK (stock_disponible >= 0),
    tipo VARCHAR2(20) NOT NULL
        CHECK (UPPER(tipo) IN ('GENERICO','MARCA'))
);

/* ===================== RECETAS Y DETALLE ===================== */

CREATE TABLE receta (
    id_receta NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    rut_paciente VARCHAR2(12) NOT NULL,
    rut_medico VARCHAR2(12) NOT NULL,
    rut_digitador VARCHAR2(12) NOT NULL,
    fecha_emision DATE NOT NULL,
    observaciones VARCHAR2(500),
    tipo_receta VARCHAR2(15) NOT NULL
        CHECK (UPPER(tipo_receta) IN ('DIGITAL','MAGISTRAL','RETENIDA','GENERAL','VETERINARIA')),
    fecha_expiracion DATE,
    diagnostico VARCHAR2(500) NOT NULL,
  
    CONSTRAINT fk_receta_paciente
        FOREIGN KEY (rut_paciente) REFERENCES paciente(rut),
    CONSTRAINT fk_receta_medico
        FOREIGN KEY (rut_medico) REFERENCES medico(rut),
    CONSTRAINT fk_receta_digitador
        FOREIGN KEY (rut_digitador) REFERENCES digitador(rut)
);

/* DETALLE DE RECETA */
CREATE TABLE receta_detalle (
    id_receta NUMBER NOT NULL,
    id_medicamento NUMBER NOT NULL,
    cantidad NUMBER NOT NULL CHECK (cantidad > 0),
    indicaciones VARCHAR2(300),

    CONSTRAINT pk_receta_detalle PRIMARY KEY (id_receta, id_medicamento),
    CONSTRAINT fk_det_receta
        FOREIGN KEY (id_receta) REFERENCES receta(id_receta),
    CONSTRAINT fk_det_medicamento
        FOREIGN KEY (id_medicamento) REFERENCES medicamento(id_medicamento)
);

/* ===================== PAGOS ===================== */
/* Pago asociado a receta. . */
CREATE TABLE pago (
    id_pago NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    id_receta NUMBER NOT NULL,
    monto_pagado NUMBER NOT NULL CHECK (monto_pagado > 0),
    fecha_pago DATE NOT NULL,
    
    CONSTRAINT fk_pago_receta
        FOREIGN KEY (id_receta) REFERENCES receta(id_receta)
);


/* ===================== COMENTARIOS ===================== */
/*
- Se usó IDENTITY para: ESPECIALIDAD (autoincremental) y COMUNA (START WITH 1101, +1).
- Teléfono de MÉDICO es UNIQUE.
- DV de pacientes, médicos y digitadores: solo 0-9 o K (CHECK con REGEXP_LIKE).
- Tipos controlados:
    * medicamento.tipo: GENERICO | MARCA
    * receta.tipo_receta: DIGITAL | MAGISTRAL | RETENIDA | GENERAL | VETERINARIA
- Dirección completa del paciente se logra vía FK a COMUNA y joins a CIUDAD y REGIÓN.
- Orden de creación respeta dependencias para ejecución secuencial sin errores.
*/

--------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------

/* 
   PRY2204 - Exp3 - Semana 6
   Caso 2
*/

/* 1) MEDICAMENTO: precio unitario dentro de rango 1.000 a 2.000.000 */
ALTER TABLE medicamento
    ADD (precio NUMBER NOT NULL);

ALTER TABLE medicamento
    ADD CONSTRAINT ck_medicamento_precio_rango
    CHECK (precio BETWEEN 1000 AND 2000000);

/* 2) PAGO: método de pago restringido a los valores indicados */
ALTER TABLE pago
    ADD (metodo_pago VARCHAR2(15) NOT NULL);

ALTER TABLE pago
    ADD CONSTRAINT ck_pago_metodo_pago
    CHECK (UPPER(metodo_pago) IN ('EFECTIVO','TARJETA','TRANSFERENCIA'));

/* 3) PACIENTE: reemplazar EDAD por FECHA_NACIMIENTO */
ALTER TABLE paciente
    DROP COLUMN edad;

ALTER TABLE paciente
    ADD (fecha_nacimiento DATE);

/* ===================== COMENTARIOS ===================== */
/*
- Rango de precio conforme a requisitos del Caso 2.
- Dominio de método de pago: EFECTIVO | TARJETA | TRANSFERENCIA.
- EDAD se elimina y se agrega FECHA_NACIMIENTO (estructura, no cálculo).
*/
